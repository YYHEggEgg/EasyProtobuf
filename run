#!/bin/bash

# 1. 接受参数并赋值给变量 protocol_ver，若未传参则提示用户并退出
if [ $# -eq 0 ]
then
  echo "Please give in the param!"
  exit 1
else
  protocol_ver=$1
fi

# 2. 检查目录 Protobuf-$protocol_ver/Protos 是否存在，不存在则提示用户并退出
if [ ! -d "Protobuf-$protocol_ver/Protos" ]
then
  echo "Protobuf-$protocol_ver/Protos doesn't exist!"
  exit 1
fi

# 3. 创建文件夹 Protobuf-$protocol_ver/Compiled
mkdir -p "Protobuf-$protocol_ver/Compiled"

# 4. 编译proto文件
# echo "Start compiling protos..."
# protoc --proto_path="Protobuf-$protocol_ver/Protos" --csharp_out="Protobuf-$protocol_ver/Compiled" "Protobuf-$protocol_ver/Protos/*.proto"

# 5. Call dotnet publish and pass the version attribute
echo "Start building program..."
dotnet build EasyProtobuf.csproj -c Debug -p:protobuf_version="$protocol_ver"

# 6. Check if the build was successful or not
if [ $? -eq 0 ]
then
  echo "MSBuild Successful. Running..."
else
  echo "MSBuild Failed."
  exit 1
fi

# 7. Set Protobuf Version and Enable HotPatch
export EASYPROTOBUF_PROTOCOL_VERSION=$protocol_ver
export COMPLUS_ForceENC=1

# 8. Run 
dotnet run --no-build